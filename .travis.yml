language: haxe

# TravisCI by default run on linux.
# Let's enable both linux and mac builds because why not?
os:
  - linux
#  - osx

# Let's use OSX 10.10, which is the oldest version that homebrew provides bottles for.
# https://docs.travis-ci.com/user/osx-ci-environment/
#osx_image: xcode6.4

# Test with Haxe 3.4.0 and Haxe development.
haxe:
  - "3.4.0"
  - development

matrix:
  # Allow Haxe development to fail.
  allow_failures:
    - haxe: development

addons:
  # This is the preferred way to install apt packages.
  # However, it only allow some but not all packages.
  # Alternatively, we can use `sudo apt-get install ...` in the `install:` section.
  # http://docs.travis-ci.com/user/apt/#Adding-APT-Packages
  apt:
    packages:
      - yarn
#      # C++ (for rebuilding hxcpp)
#      - gcc-multilib
#      - g++-multilib
#      # Python
#      - python3
#      # PHP
#      - php5-cli
#      # C#
#      - mono-devel
#      - mono-mcs

install:
  ## os-specific config
  #- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
  #    export DISPLAY=:99.0;
  #    export AUDIODEV=null;
  #  elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
  #    brew uninstall --force brew-cask;
  #    brew update;
  #    brew install phantomjs;
  #    #brew install mono;
  #    #brew install python3;
  #  fi
  ## Install haxelibs
  #- if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
  #    haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git;
  #    pushd $(haxelib path hxcpp | head -1);
  #      pushd tools/hxcpp; haxe compile.hxml; popd;
  #      pushd project; neko build.n; popd;
  #    popd;
  #  else
  #    haxelib install hxcpp;
  #  fi
  #- haxelib install hxjava
  #- haxelib install hxcs
  - yes | haxelib install hmm
  - haxelib run hmm setup
  - hmm install
  - yes | haxelib install dox
  - haxelib list

script:
  - haxe client_enthralerdotcom.hxml
  #           && haxe phantomjs/run.hxml bin/HelloWorld.js
  - haxe server_enthralerdotcom.hxml
  #           && php bin/index.php
  - yarn
  - yarn webpack
